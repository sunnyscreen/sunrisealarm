name: Deploy Test Dashboard

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  run-tests:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test
      continue-on-error: true

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run E2E tests
      run: npm run test:e2e
      continue-on-error: true

    - name: Generate videos index
      run: |
        cd test-results/playwright-output
        echo '[' > ../videos.json
        first=true
        for video in *.webm; do
          if [ -f "$video" ]; then
            if [ "$first" = false ]; then
              echo ',' >> ../videos.json
            fi
            name=$(echo "$video" | sed 's/.webm$//' | sed 's/-/ /g')
            echo "  {\"name\": \"$name\", \"path\": \"test-results/playwright-output/$video\"}" >> ../videos.json
            first=false
          fi
        done
        echo ']' >> ../videos.json
        cat ../videos.json

    - name: Upload test results artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  deploy:
    needs: run-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-results
        path: test-results/

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Prepare deployment directory
      run: |
        mkdir -p _site
        cp test-dashboard.html _site/index.html
        cp -r test-results _site/

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
