name: CI/CD - Test & Deploy Web App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Permissions for deploying to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "ci-cd"
  cancel-in-progress: false

jobs:
  test:
    name: Run All Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Upload test results for dashboard
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results/
        retention-days: 90

  deploy-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-results
        path: test-results/

    - name: Create videos manifest
      run: |
        # Create videos.json manifest for test dashboard
        mkdir -p tests/test-results/playwright-output

        # Copy test results
        cp -r test-results/* tests/test-results/ 2>/dev/null || true

        # Generate videos.json
        cat > tests/test-results/videos.json << 'EOF'
        []
        EOF

        # If videos exist, create proper manifest
        if [ -d "test-results/playwright-output" ] && [ "$(ls -A test-results/playwright-output/*.webm 2>/dev/null)" ]; then
          echo "[" > tests/test-results/videos.json
          first=true
          for video in test-results/playwright-output/*.webm; do
            if [ -f "$video" ]; then
              filename=$(basename "$video")
              name=$(echo "$filename" | sed 's/.webm$//' | sed 's/-/ /g')
              [ "$first" = false ] && echo "," >> tests/test-results/videos.json
              echo "  {\"name\": \"$name\", \"file\": \"$filename\"}" >> tests/test-results/videos.json
              first=false
            fi
          done
          echo "]" >> tests/test-results/videos.json
        fi

    - name: Create deployment directory
      run: |
        mkdir -p _site

        # Copy homepage, web app, and assets
        cp index.html _site/
        cp app.html _site/
        cp alarm-utils.js _site/
        cp icon.png _site/

        # Copy tests directory with results
        cp -r tests _site/

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

