name: Test Suite

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  deployment_status:

jobs:
  # Run unit tests on every push
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-results
        path: test-results/
        retention-days: 30

  # Run E2E tests after Vercel deployment succeeds
  e2e-tests:
    name: E2E Tests (Preview)
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run E2E tests against Vercel preview
      id: e2e-tests
      env:
        BASE_URL: ${{ github.event.deployment_status.target_url }}
        PLAYWRIGHT_BYPASS_HEADER: x-vercel-protection-bypass
        PLAYWRIGHT_BYPASS_VALUE: ${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}
      run: |
        echo "Testing deployment at: $BASE_URL"
        npm run test:e2e:preview

    - name: Upload E2E test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results
        path: test-results/
        retention-days: 30

  # Promote to production after E2E tests pass on preview branch
  promote-to-production:
    name: Promote to Production
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: |
      github.event_name == 'deployment_status' &&
      github.event.deployment_status.state == 'success' &&
      github.event.deployment_status.environment == 'Preview' &&
      github.ref == 'refs/heads/preview'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Merge preview to main
      run: |
        git fetch origin main:main
        git checkout main
        git merge origin/preview --no-ff -m "Auto-promote preview to production after E2E tests passed

        Preview deployment: ${{ github.event.deployment_status.target_url }}
        E2E tests: Passed ‚úÖ

        ü§ñ Automated by GitHub Actions"
        git push origin main

    - name: Deployment initiated
      run: |
        echo "‚úÖ E2E tests passed on preview"
        echo "üöÄ Merged preview to main"
        echo "‚è≥ Vercel will now deploy to production (sunnyscreen.art)"
