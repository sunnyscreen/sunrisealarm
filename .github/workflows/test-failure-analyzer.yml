name: Test Failure Analyzer

on:
  workflow_run:
    workflows: ["Test Suite"]
    types: [completed]

jobs:
  analyze-failures:
    name: Analyze Test Failures
    runs-on: ubuntu-latest
    # Only run if tests failed
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}

    permissions:
      contents: read
      pull-requests: write
      issues: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.workflow_run.head_sha }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Install dependencies
      run: npm ci

    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        name: e2e-test-results
        path: test-results/
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
      continue-on-error: true

    - name: Download unit test artifacts
      uses: actions/download-artifact@v4
      with:
        name: unit-test-results
        path: test-results/
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}
      continue-on-error: true

    - name: Analyze failures and generate recommendations
      id: analyze
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        node .github/scripts/analyze-test-failures.js
      continue-on-error: true

    - name: Find associated PR
      id: find-pr
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pulls } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            head: `${context.repo.owner}:${context.payload.workflow_run.head_branch}`
          });

          if (pulls.length > 0) {
            core.setOutput('pr_number', pulls[0].number);
            return pulls[0].number;
          }
          return null;

    - name: Comment on PR with analysis
      if: steps.find-pr.outputs.pr_number
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          let analysis = '';
          try {
            analysis = fs.readFileSync('test-results/failure-analysis.md', 'utf8');
          } catch (e) {
            analysis = '‚ö†Ô∏è Could not generate detailed analysis. Check workflow logs for details.';
          }

          const body = `## üîç Test Failure Analysis

${analysis}

---
<sub>View detailed test results on the [test dashboard](https://preview.sunnyscreen.art/tests) | Run: [#${{ github.event.workflow_run.id }}](${{ github.event.workflow_run.html_url }})</sub>`;

          // Check if we already commented
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: ${{ steps.find-pr.outputs.pr_number }}
          });

          const botComment = comments.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('Test Failure Analysis')
          );

          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.find-pr.outputs.pr_number }},
              body: body
            });
          }

    - name: Upload analysis artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: failure-analysis
        path: test-results/failure-analysis.md
        retention-days: 30
